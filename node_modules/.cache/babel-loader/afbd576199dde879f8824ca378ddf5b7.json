{"ast":null,"code":"var _jsxFileName = \"/Users/isogain/Desktop/Everything/compsci/project/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport { useTrail, animated, useTransition, useSpring, useChain, config, useSpringRef } from 'react-spring';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { store, useGlobalState } from 'state-pool';\nimport { isPropertySignature } from 'typescript';\nimport BarChart from './components/BarChart';\nimport CharStats from './components/BarChart'; //Class component for error handling because class components are useful when we have a requirement with the state of the component and its hard to do with a functional component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStatefromError(error) {\n    //Updates render so that the next render will show fallback UI\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorinfo) {\n    //Error reporting service\n    console.log(error, errorinfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Hey you did something wrong again \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n} //https://dev.to/yezyilomo/you-can-definitely-use-global-variables-to-manage-global-state-in-react-17l3 \n// For global counter ( State - pool)\n\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n}\n\nstore.setState(\"count\", 0);\nstore.setState(\"tasks\", 0);\nstore.setState(\"attacks\", 0);\nstore.setState(\"exp\", 10);\nstore.setState(\"workout\", 0);\nstore.setState(\"name\", 0);\n\nfunction Experience(props) {\n  _s();\n\n  const [experience, setExp] = useGlobalState(\"exp\");\n\n  let incrementExp = e => {\n    setExp(experience + 5);\n  };\n\n  let level = Math.floor(experience) / 10;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Level:\", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n} // Each successful monster gives 5 EXP. \n// It takes 10 EXP to get one level so EXP / 10 = Level\n\n\n_s(Experience, \"D1o94VtUuN3bz6v62+1bGvr6Krc=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = Experience;\n\nfunction TasksComplete(props) {\n  _s2();\n\n  const [task, setTask] = useGlobalState(\"tasks\");\n  const [workout, setWorkout] = useGlobalState(\"workout\");\n\n  let inrementTask = e => {\n    setTask(task + 1);\n    setWorkout(workout + 2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" You have completed a total of \", task, \" tasks! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(TasksComplete, \"QilBZqkpAcJaaKM89aEBdDbq0LY=\", false, function () {\n  return [useGlobalState, useGlobalState];\n});\n\n_c2 = TasksComplete;\n\nfunction Attacks(props) {\n  _s3();\n\n  const [attack, setAttack] = useGlobalState(\"attacks\");\n\n  let incrementAttack = e => {\n    setAttack(attack + 2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" You have \", attack, \" attacks left! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n}\n\n_s3(Attacks, \"AiYMgmaB2HTPEYFepA9dCjjfu5c=\", false, function () {\n  return [useGlobalState];\n});\n\n_c3 = Attacks;\n\nfunction CreateCounter(props) {\n  _s4();\n\n  const [count, setCount] = useGlobalState(\"count\");\n\n  let incrementCount = e => {\n    setCount(count + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" You have completed a total of \", count, \" tasks! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(CreateCounter, \"cf2sK8jUnfMqa556/1U2JSHC98c=\", false, function () {\n  return [useGlobalState];\n});\n\n_c4 = CreateCounter;\nlet now = new Date();\nlet d = Date(\"2021-12-07\"); //https://blog.logrocket.com/building-inline-editable-ui-in-react/\n// Component accept text, laceholder values and also pass what type of Input - \n// input, textarea so that we can use it for styling accordingly\n\nconst Editable = ({\n  text,\n  type,\n  placeholder,\n  children,\n  ...props\n}) => {\n  _s5();\n\n  // Manage the state whether to show the label or the input box. By default, label will be shown.\n  const [isEditing, setEditing] = useState(false); // Event handler while pressing any key while editing\n\n  const handleKeyDown = (event, type) => {// Handle when key is pressed\n  };\n  /*\n  - It will display a label is `isEditing` is false\n  - It will display the children (input or textarea) if `isEditing` is true\n  - when input `onBlur`, we will set the default non edit mode\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", { ...props,\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      onBlur: () => setEditing(false),\n      onKeyDown: e => handleKeyDown(e, type),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setEditing(true),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: text || placeholder || \"Editable content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 3\n  }, this);\n};\n\n_s5(Editable, \"tuiZ/XkP3IIihHgOqim00M9Cb2U=\");\n\n_c5 = Editable;\n\nfunction Username() {\n  _s6();\n\n  const [name, setName] = useGlobalState(\"name\");\n  return /*#__PURE__*/_jsxDEV(Editable, {\n    text: name,\n    placeholder: \"Username\",\n    type: \"input\",\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Username\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_s6(Username, \"XMvInxOiaeo9iVNlkdBs/Jg7xC0=\", false, function () {\n  return [useGlobalState];\n});\n\n_c6 = Username;\n\nfunction NewItemForm({\n  onSubmit\n}) {\n  _s7();\n\n  const [subject, setSubject] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [count, setCount] = useGlobalState(\"count\");\n  const [workout, setWorkout] = useState(0);\n  const [health, setHealth] = useState(0);\n  const [study, setStudy] = useState();\n\n  let incrementWork = e => {\n    setWorkout(workout + 1);\n  };\n\n  let incrementHealth = e => {\n    setHealth(health + 1);\n  };\n\n  let incrementStudy = e => {\n    setStudy(study + 1);\n  };\n\n  let incrementCount = e => {\n    setCount(count + 1);\n  };\n\n  CharStats[0] = CharStats[0] + workout;\n  CharStats[1] = CharStats[1] + health;\n  CharStats[2] = CharStats[2] + study;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"NewItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Create a new item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"subj\",\n        children: \" - Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"subj\",\n        value: subject,\n        onChange: e => {\n          setSubject(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"desc\",\n        children: \" - Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"desc\",\n        type: \"text\",\n        value: description,\n        rows: 5,\n        onChange: e => {\n          setDescription(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type\",\n        children: \" - Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        onChange: e => {\n          setType(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          selected: true,\n          children: \"Type of Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Workout\",\n          onClick: () => {\n            incrementWork();\n          },\n          children: \"Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Health\",\n          onClick: () => {\n            incrementHealth();\n          },\n          children: \"Health\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Study\",\n          onClick: () => {\n            incrementStudy();\n          },\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"create\",\n        onClick: e => {\n          onSubmit({\n            subject: subject,\n            description: description,\n            type: type\n          });\n          setSubject(\"\");\n          setDescription(\"\");\n          setType(\"\");\n          incrementCount();\n        },\n        children: \"Create item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 7\n  }, this);\n}\n\n_s7(NewItemForm, \"QYT2Xv/7QykWFkHmsL2f0GTwoCk=\", false, function () {\n  return [useGlobalState];\n});\n\n_c7 = NewItemForm;\n\nfunction ShowItem({\n  key,\n  item,\n  onDelete\n}) {\n  _s8();\n\n  const [task, setTask] = useGlobalState(\"tasks\");\n  const [attack, setAttack] = useGlobalState(\"attacks\");\n\n  let incrementTask = e => {\n    setTask(task + 1);\n  };\n\n  let incrementAttack = e => {\n    setAttack(attack + 2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ShowItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: \" - Subject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: item.subject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: \" - Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: \" - Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: item.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Green\",\n      className: \"App\",\n      onClick: () => {\n        onDelete(key);\n        incrementTask(item.type);\n        incrementAttack();\n      },\n      children: [\" \", \"x\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n} //Add items below not above\n\n\n_s8(ShowItem, \"j73nDBOb8Bvyh7I3+/B/PmPRRgs=\", false, function () {\n  return [useGlobalState, useGlobalState];\n});\n\n_c8 = ShowItem;\n\nfunction ItemsList() {\n  _s9();\n\n  const [items, setItems] = useState([]);\n\n  const addItem = item => {\n    console.log(\"addItem received:\", item);\n    setItems([...items, item]);\n  };\n\n  const onDelete = i => {\n    items.splice(i, 1);\n    setItems([...items]);\n  };\n\n  console.log(items);\n  return /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ItemsList\",\n      children: [items.map((val, i) => {\n        return /*#__PURE__*/_jsxDEV(ShowItem, {\n          item: val,\n          onDelete: onDelete\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(NewItemForm, {\n        onSubmit: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n\n_s9(ItemsList, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n\n_c9 = ItemsList;\n{\n  /* Implementing a stack using a singly linked list - witth the help of https://reactgo.com/datastructure-stacks-queues-javascript/*/\n}\n{\n  /* Declaring a class Node with two properties data and next */\n}\n\nclass Node {\n  constructor(data) {\n    this.data = data;\n    this.next = null;\n  }\n\n} /// Push, and declaring first, last and size properties of the stack \n/// Create method which accepts data as argument, declare a new node with that data, \n/// If a stack is empty set first and last node to newly created node, \n/// If there is data in stack then set new node.next to first property \n/// Update the first property with new node, then increment stack size by one \n\n\nclass Stack {\n  constructor() {\n    this.first = null;\n    this.last = null;\n    this.size = 0;\n  }\n\n  push(data) {\n    let node = new Node(data); // new mode\n    // stack is empty \n\n    if (!this.first) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.next = this.first;\n      this.first = node;\n    }\n\n    this.size++;\n  }\n\n  pop() {\n    if (!this.first) return null;\n    let node = this.first;\n\n    if (node.next) {\n      node = node.next;\n      this.first = node;\n    } else {\n      this.first = null;\n      this.last = null;\n    }\n\n    this.size--;\n  }\n\n}\n\nfunction SmallLine() {\n  return /*#__PURE__*/_jsxDEV(\"h6\", {\n    className: \"InLine\",\n    children: \"|\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 10\n  }, this);\n}\n\n_c10 = SmallLine;\n{\n  /*\n   The function above is the symbol to represent the numerical stat of that characteristic of the user \n   The function below is for calculating how mnay lines to display\n  */\n}\n\nfunction CharList({\n  onSubmit\n}) {\n  _s10();\n\n  const [workout, setWorkout] = useGlobalState(\"workout\");\n  const Currenttotal = Characteristics[1][4] + Characteristics[1][3] + Characteristics[1][2] + Characteristics[1][1] + Characteristics[1][0];\n  let rowsWorkout = [];\n\n  for (let i = 0; i < Characteristics[1][0] / Currenttotal * 100 / 10; i++) {\n    rowsWorkout.push( /*#__PURE__*/_jsxDEV(SmallLine, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 24\n    }, this));\n  }\n\n  let rowsHealth = [];\n\n  for (let i = 0; i < Characteristics[1][2] / Currenttotal * 100 / 10; i++) {\n    rowsHealth.push( /*#__PURE__*/_jsxDEV(SmallLine, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 23\n    }, this));\n  }\n\n  let rowsStudy = [];\n\n  for (let i = 0; i < Characteristics[1][1] / Currenttotal * 100 / 10; i++) {\n    rowsStudy.push( /*#__PURE__*/_jsxDEV(SmallLine, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 22\n    }, this));\n  }\n\n  Characteristics[1][3] = workout;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NoPadding\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"Center\",\n      children: \" Strengths and Weaknesses (Tasks)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [\"- Workout [\" + Characteristics[1][0] + \"]\", rowsWorkout]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [\" - Health [\" + Characteristics[1][2] + \"]\", rowsHealth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [\" - Study [\" + Characteristics[1][1] + \"]\", rowsStudy]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 7\n  }, this);\n}\n\n_s10(CharList, \"YCw7ykDp/1JeVn/PX/b86ThOzho=\", false, function () {\n  return [useGlobalState];\n});\n\n_c11 = CharList;\n\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Footer\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/system\",\n      children: \"\\u2500 Profile  \\u2500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/analytics\",\n      children: \"\\u2500  Analytics  \\u2500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/adventure\",\n      children: \"\\u2500  Adventure  \\u2500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, this);\n}\n\n_c12 = Footer;\n\nfunction Intro() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Intro\",\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/system\",\n        children: \"- Welcome. Press to continue -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 5\n  }, this);\n}\n\n_c13 = Intro;\n{\n  /* linked list? */\n}\nconst Characteristics = [['Workout', 'Study', 'Health', 'Productivity', 'Efficiency'], [0, 0, 0, 0, 0]];\n{\n  /* For the CHarts.js bit and the detailing statistics, use this\n       for i from 0 to Table[0].length -1, \n         print Table[0][i] and Table[table.length-1][i]\n  */\n}\n\nfor (let i = 0; i < Characteristics[0].length; i++) {\n  console.log(Characteristics[0][i], Characteristics[Characteristics.length - 1][i]);\n} //https://devtrium.com/posts/set-interval-react Time and Updating Graphs - Putting char stats into Stack\n//https://upmostly.com/tutorials/setinterval-in-react-components-using-hooks\n//https://devtrium.com/posts/set-timeout-react this is for setting a function to run at set intervals. //I modified it to run a repeating timeout \n//https://www.newline.co/fullstack-react/30-days-of-react/day-13/\n\n\nconst charstack = new Stack();\nconst tempstack = new Stack();\n\nfunction updateStack() {\n  charstack.push(Characteristics[1][0]);\n  charstack.push(Characteristics[1][1]);\n  charstack.push(Characteristics[1][2]);\n  charstack.push(Characteristics[1][3]);\n  charstack.push(Characteristics[1][4]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n}\n\nconst ExampleCounter = () => {\n  _s11();\n\n  const [seconds, setSeconds] = useState(0); //State variable. Initialised using useState react hook. the hook\n  //This is for the current state\n\n  const [char, pushchar] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('Called every two seconds');\n    }, 2000); //This is in milliseconds - so two seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TimeCounter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this);\n};\n\n_s11(ExampleCounter, \"4asFYkIJv5Vw+1JVRaNUeABJz2k=\");\n\n_c14 = ExampleCounter;\n\nfunction SystemPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username\",\n        children: [/*#__PURE__*/_jsxDEV(Experience, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Username, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"  -  Daily Tasks  - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ItemsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" - - - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"  -  Quests  - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ItemsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" - - - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" - - - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 480,\n    columnNumber: 5\n  }, this);\n}\n\n_c15 = SystemPage;\n\nfunction DefaultPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Intro, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 515,\n    columnNumber: 5\n  }, this);\n}\n\n_c16 = DefaultPage;\n\nfunction AnalyticsPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"MyStatistics\",\n      children: \"  -   - My Statistics  -  - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksComplete, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CharList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" - - - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" - - - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 526,\n    columnNumber: 5\n  }, this);\n} //Since putting it in the function made it refresh\n\n\n_c17 = AnalyticsPage;\n\nfunction NewMob() {\n  var word = [\"Goblin\", \"Slime\", \"Skeleton\", \"Wraith\", \"Gargoyle\", \"Golem\", \"Orc\", \"Ghouls\", \"Blood-Starved Beast\", \"Dragon\", \"Elemental\", \"Demon\"];\n  var words = word[Math.floor(Math.random() * word.length)];\n  return /*#__PURE__*/_jsxDEV(\"h6\", {\n    children: words\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 556,\n    columnNumber: 5\n  }, this);\n}\n\n_c18 = NewMob;\nvar word = [\"Goblin\", \"Slime\", \"Skeleton\", \"Wraith\", \"Gargoyle\", \"Golem\", \"Orc\", \"Ghouls\", \"Blood-Starved Beast\", \"Dragon\", \"Elemental\", \"Demon\"];\nvar words = word[Math.floor(Math.random() * word.length)];\n\nfunction RandomMonster(props, filename, callback) {\n  _s12();\n\n  // Monster Title and Description\n  var hp = [1, 3, 5, 7, 10];\n  var hps = hp[Math.floor(Math.random() * hp.length)];\n  const [health, setHealth] = useState(hps);\n  const [exps, setexp] = useGlobalState(\"exp\");\n  const [attack, setAttack] = useGlobalState(\"attacks\");\n\n  let incrementexp = e => {\n    if (health < 0) {\n      setexp(exps + 5);\n    }\n  };\n\n  let decrementhealth = e => {\n    if (attack > 0) {\n      setHealth(health - 2);\n    }\n  };\n\n  let decrementAttack = e => {\n    if (attack > 0) {\n      setAttack(attack - 1);\n    }\n  };\n\n  let incrementhealth = e => {\n    setHealth(health + 13);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [health > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Center\",\n      onClick: () => {\n        decrementhealth();\n        decrementAttack();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 88\n      }, this), words, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 100\n      }, this), \" HP: \", health, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 119\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 125\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 9\n    }, this), health < 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: () => {\n        incrementexp();\n        incrementhealth();\n      },\n      children: [\"Congrats, you defeated the monster and earned 5 EXP! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 119\n      }, this), \"Click again to collect! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 598,\n    columnNumber: 5\n  }, this);\n}\n\n_s12(RandomMonster, \"RJ19WsvvU92IAduPyCx2+2nFZWo=\", false, function () {\n  return [useGlobalState, useGlobalState];\n});\n\n_c19 = RandomMonster;\n\nfunction AdventurePage() {\n  _s13();\n\n  const [attack, setAttack] = useGlobalState(\"attacks\");\n  const [exps, setExp] = useGlobalState(\"exp\");\n\n  let incrementExp = e => {\n    setExp(exps + 5);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Adventure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"Center\",\n      children: \"The monster will run away if you leave, so kill it in one go!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"Center\",\n      children: [\" You have \", attack, \" attacks left! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Monsters\",\n      children: /*#__PURE__*/_jsxDEV(RandomMonster, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 625,\n    columnNumber: 5\n  }, this);\n}\n\n_s13(AdventurePage, \"ba1l1RZm0IfiC1l1gq2S5l2Gd5U=\", false, function () {\n  return [useGlobalState, useGlobalState];\n});\n\n_c20 = AdventurePage;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/system\",\n          element: /*#__PURE__*/_jsxDEV(SystemPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(DefaultPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/analytics\",\n          element: /*#__PURE__*/_jsxDEV(AnalyticsPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/adventure\",\n          element: /*#__PURE__*/_jsxDEV(AdventurePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 639,\n    columnNumber: 5\n  }, this);\n}\n\n_c21 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n\n$RefreshReg$(_c, \"Experience\");\n$RefreshReg$(_c2, \"TasksComplete\");\n$RefreshReg$(_c3, \"Attacks\");\n$RefreshReg$(_c4, \"CreateCounter\");\n$RefreshReg$(_c5, \"Editable\");\n$RefreshReg$(_c6, \"Username\");\n$RefreshReg$(_c7, \"NewItemForm\");\n$RefreshReg$(_c8, \"ShowItem\");\n$RefreshReg$(_c9, \"ItemsList\");\n$RefreshReg$(_c10, \"SmallLine\");\n$RefreshReg$(_c11, \"CharList\");\n$RefreshReg$(_c12, \"Footer\");\n$RefreshReg$(_c13, \"Intro\");\n$RefreshReg$(_c14, \"ExampleCounter\");\n$RefreshReg$(_c15, \"SystemPage\");\n$RefreshReg$(_c16, \"DefaultPage\");\n$RefreshReg$(_c17, \"AnalyticsPage\");\n$RefreshReg$(_c18, \"NewMob\");\n$RefreshReg$(_c19, \"RandomMonster\");\n$RefreshReg$(_c20, \"AdventurePage\");\n$RefreshReg$(_c21, \"App\");","map":{"version":3,"sources":["/Users/isogain/Desktop/Everything/compsci/project/src/App.js"],"names":["useState","useEffect","useRef","React","ReactDOM","useTrail","animated","useTransition","useSpring","useChain","config","useSpringRef","BrowserRouter","Router","Routes","Route","Link","store","useGlobalState","isPropertySignature","BarChart","CharStats","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStatefromError","error","componentDidCatch","errorinfo","console","log","render","children","handleSubmit","event","preventDefault","setState","Experience","experience","setExp","incrementExp","e","level","Math","floor","TasksComplete","task","setTask","workout","setWorkout","inrementTask","Attacks","attack","setAttack","incrementAttack","CreateCounter","count","setCount","incrementCount","now","Date","d","Editable","text","type","placeholder","isEditing","setEditing","handleKeyDown","Username","name","setName","target","value","NewItemForm","onSubmit","subject","setSubject","description","setDescription","setType","health","setHealth","study","setStudy","incrementWork","incrementHealth","incrementStudy","ShowItem","key","item","onDelete","incrementTask","ItemsList","items","setItems","addItem","i","splice","map","val","Node","data","next","Stack","first","last","size","push","node","pop","SmallLine","CharList","Currenttotal","Characteristics","rowsWorkout","rowsHealth","rowsStudy","Footer","Intro","length","charstack","tempstack","updateStack","ExampleCounter","seconds","setSeconds","char","pushchar","interval","setInterval","clearInterval","SystemPage","DefaultPage","AnalyticsPage","NewMob","word","words","random","RandomMonster","filename","callback","hp","hps","exps","setexp","incrementexp","decrementhealth","decrementAttack","incrementhealth","AdventurePage","App"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom'\nimport {useTrail, animated, useTransition, useSpring, useChain, config, useSpringRef} from 'react-spring'\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport {store, useGlobalState} from 'state-pool';\nimport { isPropertySignature } from 'typescript';\nimport BarChart from './components/BarChart';\nimport CharStats from './components/BarChart';\n\n//Class component for error handling because class components are useful when we have a requirement with the state of the component and its hard to do with a functional component\nclass ErrorBoundary extends React.Component {\n  constructor(props) { \n    super(props);\n    this.state = {hasError: false};\n  }\n\n  static getDerivedStatefromError(error) {\n      //Updates render so that the next render will show fallback UI\n      return {hasError: true};\n  }\n\n  componentDidCatch(error, errorinfo) {\n    //Error reporting service\n    console.log(error, errorinfo)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1> Hey you did something wrong again </h1>\n    }\n\n    return this.props.children\n  }\n}\n\n//https://dev.to/yezyilomo/you-can-definitely-use-global-variables-to-manage-global-state-in-react-17l3 \n// For global counter ( State - pool)\nfunction handleSubmit(event) {\n  event.preventDefault();\n}\n\nstore.setState(\"count\",0);\nstore.setState(\"tasks\",0);\nstore.setState(\"attacks\",0);\nstore.setState(\"exp\",10);\nstore.setState(\"workout\",0);\nstore.setState(\"name\",0);\n\n\nfunction Experience(props) { \n  const [experience, setExp] = useGlobalState(\"exp\");\n  let incrementExp = (e) => {\n    setExp(experience+5)\n  }\n  let level = Math.floor(experience)/10\n  return(\n    <div>\n      <h2>Level:{level}</h2>\n    </div>\n  )\n}\n\n\n// Each successful monster gives 5 EXP. \n// It takes 10 EXP to get one level so EXP / 10 = Level\n\n\n  \n\nfunction TasksComplete(props) {\n  const [task,setTask] = useGlobalState(\"tasks\");\n  const [workout, setWorkout] = useGlobalState(\"workout\");\n  let inrementTask = (e) => {\n    setTask(task+1)\n    setWorkout(workout+2)\n  }\n    return(\n      <div>\n        <h4> You have completed a total of {task} tasks! </h4>\n        <br/>\n      </div>\n  )\n}\n\nfunction Attacks(props) {\n  const [attack, setAttack] = useGlobalState(\"attacks\");\n  let incrementAttack = (e) => {\n    setAttack(attack+2)\n  }\n    return(\n      <div>\n        <h4> You have {attack} attacks left! </h4>\n        <br/>\n      </div>\n    )\n}\nfunction CreateCounter(props) {\n  const [count, setCount] = useGlobalState(\"count\");\n\n  let incrementCount = (e) => {\n    setCount(count+1)\n  }\n\n  return (\n    <div>\n      <h4> You have completed a total of {count} tasks! </h4>\n      <br/>\n    </div>\n  )\n}\n\nlet now = new Date();\nlet d = Date(\"2021-12-07\");\n\n//https://blog.logrocket.com/building-inline-editable-ui-in-react/\n// Component accept text, laceholder values and also pass what type of Input - \n// input, textarea so that we can use it for styling accordingly\nconst Editable = ({\n  text,\n  type,\n  placeholder,\n  children,\n  ... props\n}) => {\n\n   // Manage the state whether to show the label or the input box. By default, label will be shown.\n  const [isEditing, setEditing] = useState(false);\n// Event handler while pressing any key while editing\n  const handleKeyDown = (event, type) => {\n    // Handle when key is pressed\n  };\n\n  /*\n- It will display a label is `isEditing` is false\n- It will display the children (input or textarea) if `isEditing` is true\n- when input `onBlur`, we will set the default non edit mode\n*/\n\nreturn (\n  <section {...props}>\n    {isEditing ? (\n      <div\n        onBlur={() => setEditing(false)}\n        onKeyDown={e => handleKeyDown(e, type)}\n      >\n        {children}\n      </div>\n    ) : (\n      <div\n        onClick={() => setEditing(true)}\n      >\n        <span>\n          {text || placeholder || \"Editable content\"}\n        </span>\n      </div>\n    )}\n  </section>\n);\n};\n\nfunction Username() {\n  const [name, setName] = useGlobalState(\"name\" );\n  \n  return (\n    <Editable\n    text={name}\n    placeholder=\"Username\"\n    type=\"input\"\n  >\n    <textarea\n      type = \"text\"\n      name = \"name\"\n      placeholder = \"Username\"\n      value ={name}\n      onChange={e=> setName(e.target.value)}\n      />\n  </Editable>\n  );\n}\n\nfunction NewItemForm({onSubmit}) {\n  const [subject, setSubject] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [count, setCount] = useGlobalState(\"count\");\n  const [workout, setWorkout] = useState(0);\n  const [health, setHealth] = useState(0);\n  const [study, setStudy] = useState();\n\n    let incrementWork = (e) => {\n      setWorkout(workout+1)\n    }\n\n    let incrementHealth = (e) => {\n      setHealth(health+1)\n    }\n\n    let incrementStudy = (e) => {\n      setStudy(study+1)\n    }\n\n    let incrementCount = (e) => {\n        setCount(count+1)\n    }\n    CharStats[0] = CharStats[0] + workout\n    CharStats[1] = CharStats[1] + health\n    CharStats[2] = CharStats[2] + study\n\n  return(\n      <div>\n          <fieldset className=\"NewItem\">\n            <legend>Create a new item</legend>\n\n            {/* This is the subject textbox */}\n            <label htmlFor=\"subj\"> - Subject</label>\n            <input id=\"subj\" value={subject} onChange={e=>{\n              setSubject(e.target.value);\n            }}/>\n\n            {/* This is the subject textbox */}\n            <label htmlFor=\"desc\"> - Description</label>\n            <textarea id=\"desc\" type=\"text\" value={description} rows={5} onChange={e=>{\n              setDescription(e.target.value);\n            }}/>\n\n            {/* This is for the drop down menu for the type - I have to link this in with the character stats and the graph later . */}\n            <label htmlFor=\"type\"> - Type</label>\n            <select name=\"type\" onChange={e=>{\n              setType(e.target.value);\n\n            }}>\n              <option value=\"\" selected>Type of Task</option>\n              <option value=\"Workout\" onClick={()=>{ incrementWork();}} >Workout</option>\n              <option value=\"Health\" onClick={()=>{ incrementHealth();}}>Health</option>\n              <option value=\"Study\" onClick={()=>{ incrementStudy();}}>Study</option>\n            </select>\n\n            {/*   This is the action button */}\n\n            <label htmlFor=\"create\"/>\n            <button id=\"create\" onClick={e=>{\n              onSubmit( {subject:subject, description:description, type:type} );\n              setSubject(\"\");\n              setDescription(\"\");\n              setType(\"\");\n              incrementCount();\n\n            }} >Create item</button>\n          </fieldset>\n      </div>\n  )\n}\n\nfunction ShowItem({key, item, onDelete}) {\n  const [task, setTask] = useGlobalState(\"tasks\");\n  const [attack, setAttack] = useGlobalState(\"attacks\");\n\n    let incrementTask = (e) => {\n        setTask(task+1)\n    }\n\n    let incrementAttack = (e) => {\n      setAttack(attack+2)\n    }\n  return(\n    <div className=\"ShowItem\">\n      <div className=\"left\"> - Subject</div>\n      <div className=\"right\">{item.subject}</div>\n      <div className=\"left\"> - Description</div>\n      <div className=\"right\">{item.description}</div>\n      <div className=\"left\"> - Type</div>\n      <div className=\"right\">{item.type}</div>\n      <button className=\"Green\" className=\"App\" onClick={()=>{ onDelete(key); incrementTask(item.type); incrementAttack();}}> {/* <img className=\"plus_image\" src=\"./pngwing.com (1).png\"/>*/}x</button>\n    </div>\n  )\n}\n//Add items below not above\nfunction ItemsList() {\n  \n  const [items, setItems] = useState([]);\n  const addItem = (item) => {\n    console.log(\"addItem received:\", item);\n    setItems([...items, item]);\n  }\n\n  const onDelete = (i) => {\n    items.splice(i,1)\n    setItems([...items]);\n  }\n\n  console.log(items);\n  return(\n    <h4>\n    <div className=\"ItemsList\">\n      {\n        items.map((val, i) =>{\n          return(<ShowItem key={i} item={val} onDelete={onDelete}/> )\n        })\n      }\n      <NewItemForm onSubmit={addItem}/>\n    </div>\n    </h4>\n  )\n}\n\n\n{/* Implementing a stack using a singly linked list - witth the help of https://reactgo.com/datastructure-stacks-queues-javascript/*/}\n{/* Declaring a class Node with two properties data and next */}\nclass Node{\n  constructor(data) {\n    this.data = data;\n    this.next = null;\n  }\n}\n/// Push, and declaring first, last and size properties of the stack \n/// Create method which accepts data as argument, declare a new node with that data, \n/// If a stack is empty set first and last node to newly created node, \n/// If there is data in stack then set new node.next to first property \n/// Update the first property with new node, then increment stack size by one \nclass Stack{\n  constructor(){\n    this.first = null;\n    this.last = null\n    this.size = 0\n  }\n  \n  push(data){\n\n    let node = new Node(data) // new mode\n    // stack is empty \n    if(!this.first){\n      this.first = node\n      this.last = node\n    }else{\n      node.next = this.first\n      this.first = node\n    }\n\n    this.size++\n  }\n\n  pop(){\n    \n    if(!this.first) return null;\n\n    let node = this.first\n\n    if(node.next){\n      node = node.next\n      this.first = node\n    }else{\n      this.first = null\n      this.last = null\n    }\n    this.size--\n  }\n}\n\n\nfunction SmallLine() {\n  return <h6 className=\"InLine\">|</h6>\n}\n\n{/*\n  The function above is the symbol to represent the numerical stat of that characteristic of the user \n  The function below is for calculating how mnay lines to display\n*/}\nfunction CharList({onSubmit}) {\n  const [workout, setWorkout] = useGlobalState(\"workout\")\n  const Currenttotal = Characteristics[1][4]+Characteristics[1][3]+Characteristics[1][2]+Characteristics[1][1]+Characteristics[1][0];\n    let rowsWorkout = []\n    for (let i=0; i<(((Characteristics[1][0])/Currenttotal)*100)/10; i++) {\n      rowsWorkout.push(<SmallLine key={i} />)\n    }\n    let rowsHealth = []\n    for (let i=0; i<(((Characteristics[1][2])/Currenttotal)*100)/10; i++) {\n      rowsHealth.push(<SmallLine key={i} />)\n    }\n    let rowsStudy = []\n    for (let i=0; i<(((Characteristics[1][1])/Currenttotal)*100)/10; i++) {\n      rowsStudy.push(<SmallLine key={i} />)\n    }\n    Characteristics[1][3] = workout;\n    \n  return (\n\n      <div className=\"NoPadding\">\n        {/* This is the stats list, and also prints symbols that represent stats out of overall profile */}\n        <h6 className=\"Center\"> Strengths and Weaknesses (Tasks)</h6>\n        <h6>{\"- Workout [\"+ Characteristics[1][0]+\"]\"}{rowsWorkout}</h6>\n        <h6>{\" - Health [\" + Characteristics[1][2]+\"]\"}{rowsHealth}</h6>\n        <h6>{\" - Study [\" + Characteristics[1][1]+\"]\"}{rowsStudy}</h6>\n\n      </div>\n  )\n}\n\n\nfunction Footer() {\n  return(\n    <div className=\"Footer\">\n      \n        <Link to='/system'>─ Profile  ─</Link>\n        <Link to='/analytics'>─  Analytics  ─</Link>\n        <Link to='/adventure'>─  Adventure  ─</Link>\n    </div>\n  )\n}\n\nfunction Intro() {\n  return(\n    <div className=\"Intro\">\n      <h4><Link to='/system'>- Welcome. Press to continue -</Link></h4>\n    </div>\n  )\n}\n\n\n\n{/* linked list? */}\nconst Characteristics = [\n  ['Workout', 'Study', 'Health', 'Productivity', 'Efficiency'],\n  [0,0, 0, 0, 0]\n];\n\n\n\n{/* For the CHarts.js bit and the detailing statistics, use this\n      for i from 0 to Table[0].length -1, \n        print Table[0][i] and Table[table.length-1][i]\n*/}\n  for (let i=0; i<Characteristics[0].length; i++) {\n    console.log(Characteristics[0][i], Characteristics[Characteristics.length-1][i]);\n  }\n\n\n//https://devtrium.com/posts/set-interval-react Time and Updating Graphs - Putting char stats into Stack\n//https://upmostly.com/tutorials/setinterval-in-react-components-using-hooks\n//https://devtrium.com/posts/set-timeout-react this is for setting a function to run at set intervals. //I modified it to run a repeating timeout \n//https://www.newline.co/fullstack-react/30-days-of-react/day-13/\nconst charstack = new Stack();\nconst tempstack = new Stack();\n\nfunction updateStack() {\n  charstack.push(Characteristics[1][0])\n  charstack.push(Characteristics[1][1])\n  charstack.push(Characteristics[1][2])\n  charstack.push(Characteristics[1][3])\n  charstack.push(Characteristics[1][4])\n  return( \n    <div>\n    </div>\n  )\n}\nconst ExampleCounter = () => {\n  const [seconds, setSeconds] = useState(0); //State variable. Initialised using useState react hook. the hook\n  //This is for the current state\n  const [char, pushchar] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('Called every two seconds');\n    }, 2000); //This is in milliseconds - so two seconds\n    \n\n    return () => clearInterval(interval);\n  }, []);\n  return (\n    <div className=\"TimeCounter\">\n    </div>\n  );\n};\n\n\nfunction SystemPage() {\n  return (\n    \n    <div> \n    <h1> System</h1>\n    <ErrorBoundary>\n      <div className=\"username\">\n      <Experience/>\n      <Username/>\n      </div> \n\n          {/* <a href=\"https://google.com\" target=\"_blank\" rel=\"noopener\">Open Google</a> {/* This part of the code allows for a button that links to a separate website */}\n          {/* <audio src=\"minecraft.mp3\" controls autoPlay loop></audio>  */}\n      <h2>  -  Daily Tasks  - </h2>\n      <ItemsList />\n      <h3> - - - </h3>\n      <h2>  -  Quests  - </h2>\n      <ItemsList />\n      <h3> - - - </h3>\n      <h3> - - - </h3>\n            \n    </ErrorBoundary>\n    <Footer />\n    \n\n\n    \n    \n    </div>\n\n\n\n  );\n}\n\n\nfunction DefaultPage() {\n  return(\n    <div>\n      <Intro />\n    </div>\n    \n  )\n}\n\n\nfunction AnalyticsPage() {\n  \n  return(\n    <div>\n      <h1>Analytics</h1>\n      <h2 className=\"MyStatistics\">  -   - My Statistics  -  - </h2>\n      <TasksComplete/>\n      <CharList/>\n      \n      \n      {/* for the line graph \n      for i from 0 to Table[0].length-1\n        for j from 0 to Table.length-1, return or print Table[j][i]\n      */}\n      {/* <div class=\"container\">\n        <div class=\"container__progress\" style=\"width: 40%;\">40%\n        </div>\n      </div>\n    */}\n      <BarChart/>\n      <h3> - - - </h3>\n      <h3> - - - </h3> \n    \n      <Footer />\n    </div>\n  )\n}\n\n//Since putting it in the function made it refresh\nfunction NewMob() { \n  var word=[\"Goblin\", \"Slime\",\"Skeleton\", \"Wraith\", \"Gargoyle\", \"Golem\", \"Orc\", \"Ghouls\", \"Blood-Starved Beast\", \"Dragon\", \"Elemental\", \"Demon\"];\n  var words=word[Math.floor(Math.random()*word.length)];\n  return(\n    <h6>{words}</h6>\n  )\n}\n\nvar word=[\"Goblin\", \"Slime\",\"Skeleton\", \"Wraith\", \"Gargoyle\", \"Golem\", \"Orc\", \"Ghouls\", \"Blood-Starved Beast\", \"Dragon\", \"Elemental\", \"Demon\"];\nvar words=word[Math.floor(Math.random()*word.length)];\n\nfunction RandomMonster(props, filename, callback) {\n  // Monster Title and Description\n  var hp =[1, 3, 5, 7, 10]\n  var hps=hp[Math.floor(Math.random()*hp.length)];\n\n  const [health, setHealth] = useState(hps);\n  const [exps, setexp] = useGlobalState(\"exp\");\n  const [attack, setAttack] = useGlobalState(\"attacks\");\n  \n\n    let incrementexp = (e) => {\n      if (health < 0) {\n        setexp(exps+5)\n      }\n    }\n\n    let decrementhealth = (e) => {\n      if (attack > 0) {\n        setHealth(health-2)\n      }\n    }\n\n  \n    let decrementAttack = (e) => {\n      if (attack > 0) {\n        setAttack(attack-1)\n      }\n    \n    }\n\n    let incrementhealth = (e) => {\n      setHealth(health+13)\n    }\n  \n  return(\n    <div> \n      {health > 0 && \n        <h2 className=\"Center\" onClick={()=>{ decrementhealth(); decrementAttack(); }}><br/>{words}<br/> HP: {health} <br/> <br/> </h2>\n      }\n\n      {health < 0 &&\n      <h2 onClick={() => {incrementexp(); incrementhealth(); }} >Congrats, you defeated the monster and earned 5 EXP! <br></br>Click again to collect! </h2>\n      }\n\n     \n\n    </div>\n  )\n}\n\n\n\n\n\nfunction AdventurePage() {\n  const [attack, setAttack] = useGlobalState(\"attacks\");\n  const [exps, setExp] = useGlobalState(\"exp\");\n  let incrementExp = (e) => {\n    setExp(exps+5)\n  }\n  \n  return(\n    <div>\n      <h1>Adventure</h1>\n      <h6 className=\"Center\" >The monster will run away if you leave, so kill it in one go!</h6>\n      <h6 className=\"Center\"> You have {attack} attacks left! </h6>\n      <div className=\"Monsters\"  >\n       <RandomMonster />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nfunction App() {\n  return(\n    <div>\n      <Router>\n        <Routes>\n          \n          <Route exact path=\"/system\" element={<SystemPage/>} />\n          <Route path=\"*\" element={<DefaultPage/>}/>\n          <Route path=\"/analytics\" element={<AnalyticsPage/>}/>\n          <Route path=\"/adventure\" element={<AdventurePage/>}/>\n        </Routes>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}