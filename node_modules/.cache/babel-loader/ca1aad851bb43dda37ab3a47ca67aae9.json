{"ast":null,"code":"var _jsxFileName = \"/Users/isogain/Desktop/Everything/compsci/project/src/components/LineCharts.js\";\nimport { Line, LineChart, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport CharStats from './CharStats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  name: 'Page A',\n  uv: 400,\n  pv: 2400,\n  amt: 2400\n};\n\nconst ActualLineChart = () => {\n  const data = CharStats;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 400,\n      height: 400,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"uv\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#ccc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ActualLineChart;\nexport default ActualLineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActualLineChart\");","map":{"version":3,"sources":["/Users/isogain/Desktop/Everything/compsci/project/src/components/LineCharts.js"],"names":["Line","LineChart","CartesianGrid","XAxis","YAxis","CharStats","data","name","uv","pv","amt","ActualLineChart"],"mappings":";AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,aAA1B,EAAyCC,KAAzC,EAAgDC,KAAhD,QAA4D,UAA5D;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,IAAI,GAAG;AAACC,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,EAAE,EAAE,GAArB;AAA0BC,EAAAA,EAAE,EAAE,IAA9B;AAAoCC,EAAAA,GAAG,EAAE;AAAzC,CAAb;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC1B,QAAML,IAAI,GAAGD,SAAb;AACA,sBACA;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAI,GAApB;AAAyB,MAAA,MAAM,EAAI,GAAnC;AAAwC,MAAA,IAAI,EAAEC,IAA9C;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,IAA9B;AAAmC,QAAA,MAAM,EAAG;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAe,QAAA,MAAM,EAAG;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAG;AAAjB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAUH,CAZD;;KAAMK,e;AAcN,eAAeA,eAAf","sourcesContent":["import { Line, LineChart, CartesianGrid, XAxis, YAxis} from 'recharts';\nimport CharStats from './CharStats';\n\n\nconst data = {name: 'Page A', uv: 400, pv: 2400, amt: 2400}\n\nconst ActualLineChart = () => {\n    const data = CharStats\n    return( \n    <div>\n        <LineChart width = {400} height = {400} data={data}>\n            <Line type=\"monotone\" dataKey=\"uv\" stroke = \"#8884d8\" />\n            <CartesianGrid stroke = \"#ccc\" />\n            <XAxis dataKey = \"name\" />\n            <YAxis />\n        </LineChart>\n    </div>\n    )\n}\n\nexport default ActualLineChart"]},"metadata":{},"sourceType":"module"}