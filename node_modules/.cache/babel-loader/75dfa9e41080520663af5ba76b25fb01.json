{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGlobalStateReducer = void 0;\n\nvar immer_1 = __importDefault(require(\"immer\"));\n\nvar react_1 = require(\"react\");\n\nvar GlobalStateStore_1 = require(\"./GlobalStateStore\");\n\nfunction useGlobalStateReducer(reducer, globalState, config) {\n  if (config === void 0) {\n    config = {\n      persist: true\n    };\n  }\n\n  var _globalState;\n\n  if (typeof globalState === 'string') {\n    _globalState = GlobalStateStore_1.store.getState(globalState, config);\n  } else {\n    _globalState = globalState;\n  }\n\n  var _a = react_1.useState(),\n      setState = _a[1];\n\n  var isMounted = react_1.useRef(false);\n\n  var currentState = _globalState.getValue();\n\n  var selector = config.selector;\n  var patcher = config.patcher;\n\n  function reRender() {\n    // re-render if the component is mounted\n    if (isMounted.current) {\n      setState({});\n    }\n  }\n\n  function sendUpdateSignal(newState) {\n    if (selector && selector(currentState) === selector(newState)) {// Do nothing because the selected state has not changed\n    } else {\n      reRender();\n    }\n  }\n\n  function sendDeleteSignal() {\n    reRender();\n  }\n\n  var observer = {\n    sendUpdateSignal: sendUpdateSignal,\n    sendDeleteSignal: sendDeleteSignal\n  };\n  react_1.useEffect(function () {\n    _globalState.subscribe(observer);\n\n    isMounted.current = true;\n    return function () {\n      _globalState.unsubscribe(observer);\n\n      isMounted.current = false;\n    };\n  }, []);\n\n  function dispatch(action) {\n    var newState = reducer(_globalState.getValue(), action);\n\n    _globalState.setValue(newState);\n  }\n\n  function patch(action) {\n    // patch back changed node to the global state\n    var nodeValue = reducer(selector(currentState), action);\n    var newState = immer_1.default(currentState, function (draftCurrentState) {\n      return patcher(draftCurrentState, nodeValue);\n    });\n\n    _globalState.setValue(newState);\n  }\n\n  if (selector) {\n    if (patcher) {\n      return [selector(currentState), patch];\n    } else {\n      return [selector(currentState), dispatch];\n    }\n  }\n\n  return [currentState, dispatch];\n}\n\nexports.useGlobalStateReducer = useGlobalStateReducer;","map":{"version":3,"sources":["/Users/isogain/Desktop/Everything/compsci/compsci/node_modules/state-pool/esm/useGlobalStateReducer.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","useGlobalStateReducer","immer_1","require","react_1","GlobalStateStore_1","reducer","globalState","config","persist","_globalState","store","getState","_a","useState","setState","isMounted","useRef","currentState","getValue","selector","patcher","reRender","current","sendUpdateSignal","newState","sendDeleteSignal","observer","useEffect","subscribe","unsubscribe","dispatch","action","setValue","patch","nodeValue","default","draftCurrentState"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useGlobalStateReducer = void 0;\nvar immer_1 = __importDefault(require(\"immer\"));\nvar react_1 = require(\"react\");\nvar GlobalStateStore_1 = require(\"./GlobalStateStore\");\nfunction useGlobalStateReducer(reducer, globalState, config) {\n    if (config === void 0) { config = { persist: true }; }\n    var _globalState;\n    if (typeof globalState === 'string') {\n        _globalState = GlobalStateStore_1.store.getState(globalState, config);\n    }\n    else {\n        _globalState = globalState;\n    }\n    var _a = react_1.useState(), setState = _a[1];\n    var isMounted = react_1.useRef(false);\n    var currentState = _globalState.getValue();\n    var selector = config.selector;\n    var patcher = config.patcher;\n    function reRender() {\n        // re-render if the component is mounted\n        if (isMounted.current) {\n            setState({});\n        }\n    }\n    function sendUpdateSignal(newState) {\n        if (selector && selector(currentState) === selector(newState)) {\n            // Do nothing because the selected state has not changed\n        }\n        else {\n            reRender();\n        }\n    }\n    function sendDeleteSignal() {\n        reRender();\n    }\n    var observer = {\n        sendUpdateSignal: sendUpdateSignal,\n        sendDeleteSignal: sendDeleteSignal\n    };\n    react_1.useEffect(function () {\n        _globalState.subscribe(observer);\n        isMounted.current = true;\n        return function () {\n            _globalState.unsubscribe(observer);\n            isMounted.current = false;\n        };\n    }, []);\n    function dispatch(action) {\n        var newState = reducer(_globalState.getValue(), action);\n        _globalState.setValue(newState);\n    }\n    function patch(action) {\n        // patch back changed node to the global state\n        var nodeValue = reducer(selector(currentState), action);\n        var newState = immer_1.default(currentState, function (draftCurrentState) {\n            return patcher(draftCurrentState, nodeValue);\n        });\n        _globalState.setValue(newState);\n    }\n    if (selector) {\n        if (patcher) {\n            return [selector(currentState), patch];\n        }\n        else {\n            return [selector(currentState), dispatch];\n        }\n    }\n    return [currentState, dispatch];\n}\nexports.useGlobalStateReducer = useGlobalStateReducer;\n"]},"metadata":{},"sourceType":"script"}