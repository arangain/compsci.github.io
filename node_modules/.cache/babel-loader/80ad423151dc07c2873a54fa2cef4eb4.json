{"ast":null,"code":"var _jsxFileName = \"/Users/isogain/Desktop/compsci/project/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst left = {\n  bg: `linear-gradient(120deg, #f093fb 0%, #f5576c 100%)`,\n  justifySelf: 'end'\n};\nconst right = {\n  bg: `linear-gradient(120deg, #96fbc4 0%, #f9f586 100%)`,\n  justifySelf: 'start'\n};\n\nconst Slider = ({\n  children\n}) => {\n  _s();\n\n  const [{\n    x,\n    bg,\n    scale,\n    justifySelf\n  }, api] = useSpring(() => ({\n    x: 0,\n    scale: 1,\n    ...left\n  }));\n  const bind = useDrag(({\n    active,\n    movement: [x]\n  }) => api.start({\n    x: active ? x : 0,\n    scale: active ? 1.1 : 1,\n    ...(x < 0 ? left : right),\n    immediate: name => active && name === 'x'\n  }));\n  const avSize = x.to({\n    map: Math.abs,\n    range: [50, 300],\n    output: [0.5, 1],\n    extrapolate: 'clamp'\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, { ...bind(),\n    className: styles.item,\n    style: {\n      background: bg\n    },\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      className: styles.av,\n      style: {\n        scale: avSize,\n        justifySelf\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      className: styles.fg,\n      style: {\n        x,\n        scale\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"wNYYVjTwObnr9PWmaxbZ971cJyc=\", true);\n\n_c = Slider;\n\nfunction SomeOtherFunction() {\n  _s2();\n\n  const [name, setName] = useState(\"world\");\n  useEffect(() => {\n    setName(prompt(\"What is your name?\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Hello, \", name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(SomeOtherFunction, \"CT+itGpZ+fZcez8IMEj/uknps58=\");\n\n_c2 = SomeOtherFunction;\n\nfunction Example() {\n  _s3();\n\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Example, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c3 = Example;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Slider, {\n      children: \"Slide.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Slider\");\n$RefreshReg$(_c2, \"SomeOtherFunction\");\n$RefreshReg$(_c3, \"Example\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/isogain/Desktop/compsci/project/src/App.js"],"names":["useState","useEffect","React","styles","left","bg","justifySelf","right","Slider","children","x","scale","api","useSpring","bind","useDrag","active","movement","start","immediate","name","avSize","to","map","Math","abs","range","output","extrapolate","item","background","av","fg","SomeOtherFunction","setName","prompt","Example","count","setCount","App"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport styles from './styles.module.css';\nconst left = {\n  bg: `linear-gradient(120deg, #f093fb 0%, #f5576c 100%)`,\n  justifySelf: 'end',\n}\nconst right = {\n  bg: `linear-gradient(120deg, #96fbc4 0%, #f9f586 100%)`,\n  justifySelf: 'start',\n}\n\nconst Slider: React.FC = ({ children }) => {\n  const [{ x, bg, scale, justifySelf }, api] = useSpring(() => ({\n    x: 0,\n    scale: 1,\n    ...left,\n  }))\n  const bind = useDrag(({ active, movement: [x] }) =>\n    api.start({\n      x: active ? x : 0,\n      scale: active ? 1.1 : 1,\n      ...(x < 0 ? left : right),\n      immediate: name => active && name === 'x',\n    })\n  )\n\n  const avSize = x.to({\n    map: Math.abs,\n    range: [50, 300],\n    output: [0.5, 1],\n    extrapolate: 'clamp',\n  })\n\n  return (\n    <animated.div {...bind()} className={styles.item} style={{ background: bg }}>\n      <animated.div className={styles.av} style={{ scale: avSize, justifySelf }} />\n      <animated.div className={styles.fg} style={{ x, scale }}>\n        {children}\n      </animated.div>\n    </animated.div>\n  )\n}\n\nfunction SomeOtherFunction() {\n  const [name, setName] = useState(\"world\");\n  useEffect(()=>{\n    setName(prompt(\"What is your name?\"))\n  }, [])\n  return(<h1>Hello, {name}</h1>)\n}\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n  return (\n    <div> \n      <h1>You clicked {count} times</h1>\n      <button onClick={() => setCount(count + 1 )}>\n        Click Me\n      </button>\n    </div>\n  );\n}\n\nfunction App() {\n  \n  return (\n    <div>\n      <Slider>Slide.</Slider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}